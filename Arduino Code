/*.....................Import Librairies.....................*/

#include <SoftwareSerial.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
//#include <test_logo.h>

/*............Définition des constantes Bluetooth............*/
#define rxpin 10
#define txpin 11
#define baudrate 9600
#define Periode 200 //envoie des données toute les 200ms
SoftwareSerial BT (rxpin,txpin);

/*..............Définition des constantes OLED...............*/
#define OLED_RESET 4 
#define DELAY 200 
Adafruit_SSD1306 display(OLED_RESET); 

/*............Définition des constantes encodeur.............*/
#define encoder0PinA 3 //CLK
#define encoder0PinB 4 //DATA
#define Switch 4 //SWITCH

int current_pos_enc=0;
int previous_pos_enc=0;

//Pour le sens de rotation de l'encodeur
boolean dir = true;
int current_state_pinA = 0;
int previous_state_pinA = 0;

/*..........Définition des variables et contantes............*/
String R2 = "1000";
double tension;
double resistance;
#define pinADC 0
unsigned long temps_ref;

/*................Fonction maj de l'encodeur..................*/
void doEncoder(){
  current_state_pinA = digitalRead(encoder0PinA);
  if (current_state_pinA != previous_state_pinA) {
    if (digitalRead(encoder0PinB != current_state_pinA)) {
    current_pos_enc++;
  }
  else {
    current_pos_enc--;
  }

}
previous_state_pinA = current_state_pinA;
}

/*.........Définition de la fonction affichage OLED..........*/
void printOLED(String s, int x, int y, uint16_t color, int size_text){
  display.setTextSize(size_text);   // setTextSize applique est facteur d'échelle qui permet d'agrandir ou réduire la font
  display.setTextColor(color);      // La couleur du texte
  display.setCursor(x, y);          // On va écrire en x=?, y=?
  display.println(s);               // un println comme pour écrire sur le port série
}

/*.......................Menu mesures........................*/
void MenuMesures() {

  printOLED("Resistance : ", 10, 0, WHITE, 1);
  printOLED(String(resistance/1000000.0),10, 15, WHITE, 1);
  printOLED("MOhms", 65,15,WHITE,1);
  
  printOLED("Tension : ", 10, 35, WHITE, 1);
  printOLED(String(tension), 10, 45, WHITE, 1);
  printOLED("V", 65,45,WHITE,1);
}

/*.......................Calcul Rsensor........................*/
float calculRsensor(float tension, float R_2){
  float R=0;
  R=(1+(pow(10, 5)/R_2))*pow(10,5)*(5.0/tension)-pow(10,5)-pow(10,4);
  return R;
}

//affichage logo insa
#if (SSD1306_LCDHEIGHT != 64)
#error("Height incorrect, please fix Adafruit_SSD1306.h!");
#endif
// 'Logo_INSA', 128x64px
const unsigned char myBitmap1 [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x01, 0x80, 0x3f, 0x00, 0xfc, 0x00, 0x1f, 0xfe, 0x00, 0x70, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x1f, 0x00, 0xf8, 0x00, 0x0f, 0xfc, 0x00, 0x30, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x1f, 0x00, 0xf0, 0x00, 0x07, 0xfc, 0x00, 0x30, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x1f, 0x00, 0xe0, 0x00, 0x03, 0xfc, 0x00, 0x30, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x0f, 0x00, 0xe0, 0x00, 0x03, 0xfc, 0x00, 0x38, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x0f, 0x00, 0xc0, 0x1c, 0x03, 0xfc, 0x00, 0x18, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x0f, 0x00, 0xc0, 0x3e, 0x01, 0xf8, 0x00, 0x18, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x0f, 0x00, 0xc0, 0x3e, 0x01, 0xf8, 0x00, 0x18, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x07, 0x00, 0xc0, 0x3e, 0x01, 0xf8, 0x18, 0x1c, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x07, 0x00, 0xc0, 0x3f, 0xff, 0xf8, 0x18, 0x0c, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x07, 0x00, 0xc0, 0x1f, 0xff, 0xf0, 0x18, 0x0c, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x07, 0x00, 0xc0, 0x0f, 0xff, 0xf0, 0x18, 0x0c, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x03, 0x00, 0xc0, 0x03, 0xff, 0xf0, 0x18, 0x0e, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x03, 0x00, 0xe0, 0x00, 0x7f, 0xf0, 0x18, 0x0e, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x43, 0x00, 0xe0, 0x00, 0x1f, 0xe0, 0x3c, 0x06, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x43, 0x00, 0xf0, 0x00, 0x0f, 0xe0, 0x3c, 0x06, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x41, 0x00, 0xf8, 0x00, 0x07, 0xe0, 0x3c, 0x06, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x61, 0x00, 0xfc, 0x00, 0x03, 0xe0, 0x3c, 0x07, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x61, 0x00, 0xff, 0x00, 0x01, 0xc0, 0x3c, 0x03, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x60, 0x00, 0xff, 0xe0, 0x01, 0xc0, 0x3c, 0x03, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x60, 0x00, 0xff, 0xf8, 0x01, 0xc0, 0x00, 0x03, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x70, 0x00, 0xff, 0xfc, 0x00, 0xc0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x70, 0x00, 0xff, 0xfe, 0x00, 0x80, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x70, 0x00, 0xc0, 0x7e, 0x00, 0x80, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x78, 0x00, 0xc0, 0x7e, 0x00, 0x80, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x78, 0x00, 0xc0, 0x3e, 0x01, 0x80, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x78, 0x00, 0xc0, 0x3c, 0x01, 0x80, 0x0e, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x78, 0x00, 0xc0, 0x00, 0x01, 0x00, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x7c, 0x00, 0xc0, 0x00, 0x03, 0x00, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x7c, 0x00, 0xe0, 0x00, 0x03, 0x00, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x03, 0x80, 0x7c, 0x00, 0xf0, 0x00, 0x07, 0x00, 0xff, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0x01, 0x80, 0x7c, 0x00, 0xf8, 0x00, 0x1e, 0x00, 0xff, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0x86, 0x4d, 0xe1, 0x96, 0x18, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xb6, 0x4d, 0xed, 0x96, 0x59, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xb6, 0x4d, 0xed, 0x96, 0x38, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xb6, 0x4d, 0xed, 0x97, 0x98, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xb6, 0x4d, 0xed, 0x96, 0xd9, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0x87, 0x1c, 0x61, 0x86, 0x18, 0x7f, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

/*.....................Programme principal......................*/
void setup() {

//Ouverture des ports bluetooth
pinMode (rxpin, INPUT);
pinMode (txpin, OUTPUT);

Serial.begin(baudrate);
BT.begin(baudrate);

temps_ref=millis();
  
//Ecran de démarrage OLED
display.begin(SSD1306_SWITCHCAPVCC, 0x3c); //Adress 0x3c pour un écran 128x64 (Gravity I2C OLED 2864)
display.display();
delay(10);
display.clearDisplay();

printOLED("Made by ", 40, 5, WHITE, 1);
printOLED("LEYDIER & SZUTER", 15, 35, WHITE, 1);
display.display();
delay(2000);
display.clearDisplay();

display.drawBitmap(0, 0, myBitmap1, 128, 64, WHITE);
display.display();
delay(1000);
display.clearDisplay();

}
void loop() {

//On récupère la valeur sur la pin analogique 0
tension = analogRead(pinADC); 
  
//Calcul des variables
tension=tension*5/1024;
resistance = calculRsensor(tension, R2.toInt());

//Affichage Menu des mesures sur OLED
MenuMesures();
display.display();
display.clearDisplay();

//Bluetooth  
 if (abs(millis()-temps_ref) > Periode)
 {

 BT.write(tension);
 }
 temps_ref=millis();
}
